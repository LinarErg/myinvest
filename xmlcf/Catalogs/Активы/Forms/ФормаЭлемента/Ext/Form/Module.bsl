
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СсылкаНаКартинку = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Картинка");
	Если Параметры.Ключ.Пустая() тогда
		СписокНаличиеВПортфеле.Параметры.УстановитьЗначениеПараметра("Ссылка",Справочники.Активы.ПустаяСсылка());
		
		СредняяЦена = 0;
		ОбщаяСтоимостьПокупки = 0;
		ОбщееКоличество = 0;
	Иначе
		СписокНаличиеВПортфеле.Параметры.УстановитьЗначениеПараметра("Ссылка",Объект.Ссылка);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АктивыОстаткиОстатки.Актив КАК Актив,
		|	СУММА(АктивыОстаткиОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	СУММА(АктивыОстаткиОстатки.СуммаОстаток) КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.АктивыОстатки.Остатки КАК АктивыОстаткиОстатки
		|ГДЕ
		|	АктивыОстаткиОстатки.Актив = &Актив
		|
		|СГРУППИРОВАТЬ ПО
		|	АктивыОстаткиОстатки.Актив";
		Запрос.УстановитьПараметр("Актив",Объект.Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			СредняяЦена = ВыборкаДетальныеЗаписи.СуммаОстаток / ВыборкаДетальныеЗаписи.КоличествоОстаток;
			ОбщаяСтоимостьПокупки = ВыборкаДетальныеЗаписи.СуммаОстаток;
			ОбщееКоличество = ВыборкаДетальныеЗаписи.КоличествоОстаток;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.СписокНаличиеВПортфеле.Отображение = ОтображениеТаблицы.Дерево;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.КартинкаНавигационнаяСсылка) Тогда
        Если ТекущийОбъект.ЭтоНовый() Тогда
            ТекущаяСсылка = Справочники[ТекущийОбъект.Метаданные().Имя].ПолучитьСсылку();
            ТекущийОбъект.УстановитьСсылкуНового(ТекущаяСсылка);
        Иначе
            ТекущаяСсылка = ТекущийОбъект.Ссылка;
        КонецЕсли;
        ТекущийОбъект.КартинкаНавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ТекущаяСсылка, "Картинка");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.КартинкаНавигационнаяСсылка40_40) Тогда
        Если ТекущийОбъект.ЭтоНовый() Тогда
            ТекущаяСсылка = Справочники[ТекущийОбъект.Метаданные().Имя].ПолучитьСсылку();
            ТекущийОбъект.УстановитьСсылкуНового(ТекущаяСсылка);
        Иначе
            ТекущаяСсылка = ТекущийОбъект.Ссылка;
        КонецЕсли;
        ТекущийОбъект.КартинкаНавигационнаяСсылка40_40 = ПолучитьНавигационнуюСсылку(ТекущаяСсылка, "Картинка40_40");
    КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(СсылкаНаКартинку) Тогда
		ТекущийОбъект.Картинка = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(СсылкаНаКартинку));
	ИначеЕсли Не ЗначениеЗаполнено(ТекущийОбъект.ИмяФайлаБезРасширения) Тогда
		ТекущийОбъект.Картинка = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(СсылкаНаКартинку40) Тогда
		ТекущийОбъект.Картинка40_40 = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(СсылкаНаКартинку40));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинку(Команда)
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.МножественныйВыбор = Ложь;
	ПараметрыДиалога.Заголовок = НСтр("ru = 'Выберите файл'; en = 'Select file'");
	
    ЗавершениеОбратныйВызов 	= Новый ОписаниеОповещения("ЗавершениеОбратныйВызов", ЭтотОбъект);
    ПрогрессОбратныйВызов 		= Новый ОписаниеОповещения("ПрогрессОбратныйВызов", ЭтотОбъект);
    ПередНачаломОбратныйВызов 	= Новый ОписаниеОповещения("ПередНачаломОбратныйВызов", ЭтотОбъект);
    НачатьПомещениеФайлаНаСервер(ЗавершениеОбратныйВызов, ПрогрессОбратныйВызов, ПередНачаломОбратныйВызов,, ПараметрыДиалога, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеОбратныйВызов(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт

	Если ОписаниеПомещенногоФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ИмяФайлаБезРасширения = ОписаниеПомещенногоФайла.СсылкаНаФайл.Файл.ИмяБезРасширения;
	Объект.РасширениеФайла = ОписаниеПомещенногоФайла.СсылкаНаФайл.Расширение;
	СсылкаНаКартинку = ОписаниеПомещенногоФайла.Адрес;
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПрогрессОбратныйВызов(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт

	ТекстСообщения = СтрШаблон(НСтр("ru = 'Загрузка файла %1'; en = 'Uploading file %1'"), ПомещаемыйФайл.Имя);
	РазмерФайла = СтрШаблон(Нстр("ru = 'Размер файла %1 байт'; en = 'File size %1 bytes'"), ПомещаемыйФайл.Размер());
	
	//Состояние(ТекстСообщения, Помещено, РазмерФайла, БиблиотекаКартинок.Документ);

КонецПроцедуры

&НаКлиенте
Процедура ПередНачаломОбратныйВызов(ПомещаемыйФайл, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт

	МегабайтВБайтах = 1000000;
	Если ПомещаемыйФайл.Размер() > МегабайтВБайтах Тогда
		ОтказОтПомещенияФайла = Истина;
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Отказ. Загружаемый файл «%1» имеет размер более 1 мегабайта';
		|en = 'Failure. The uploaded file «%1» is larger than 1 megabyte'"), ПомещаемыйФайл.Имя);
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		ОтказОтПомещенияФайла = Истина;
		
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, ОтказОтПомещенияФайла);
	Иначе
		//ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка файла'; en = 'Uploading file'"),, ПомещаемыйФайл.Имя);
	КонецЕсли;  

КонецПроцедуры

&НаКлиенте
Процедура УдалитьКартинку(Команда)
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьFIGIпоТикеру(Команда)
	
	Объект.figi = ИнтеграцияСТинькоффПоAPIСервер.ПолучитьFIGIпоТикеру(Объект.Тикер);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	СписокНаличиеВПортфеле.Параметры.УстановитьЗначениеПараметра("Ссылка",Объект.Ссылка);
	Элементы.СписокНаличиеВПортфеле.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинку40_40(Команда)
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.МножественныйВыбор = Ложь;
	ПараметрыДиалога.Заголовок = НСтр("ru = 'Выберите файл'; en = 'Select file'");
	
    ЗавершениеОбратныйВызов 	= Новый ОписаниеОповещения("ЗавершениеОбратныйВызов40", ЭтотОбъект);
    ПрогрессОбратныйВызов 		= Новый ОписаниеОповещения("ПрогрессОбратныйВызов40", ЭтотОбъект);
    ПередНачаломОбратныйВызов 	= Новый ОписаниеОповещения("ПередНачаломОбратныйВызов40", ЭтотОбъект);
    НачатьПомещениеФайлаНаСервер(ЗавершениеОбратныйВызов, ПрогрессОбратныйВызов, ПередНачаломОбратныйВызов,, ПараметрыДиалога, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеОбратныйВызов40(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт

	Если ОписаниеПомещенногоФайла = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаКартинку40 = ОписаниеПомещенногоФайла.Адрес;
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПрогрессОбратныйВызов40(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт

	ТекстСообщения = СтрШаблон(НСтр("ru = 'Загрузка файла %1'; en = 'Uploading file %1'"), ПомещаемыйФайл.Имя);
	РазмерФайла = СтрШаблон(Нстр("ru = 'Размер файла %1 байт'; en = 'File size %1 bytes'"), ПомещаемыйФайл.Размер());
	
	//Состояние(ТекстСообщения, Помещено, РазмерФайла, БиблиотекаКартинок.Документ);

КонецПроцедуры

&НаКлиенте
Процедура ПередНачаломОбратныйВызов40(ПомещаемыйФайл, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт

	МегабайтВБайтах = 1000000;
	Если ПомещаемыйФайл.Размер() > МегабайтВБайтах Тогда
		ОтказОтПомещенияФайла = Истина;
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Отказ. Загружаемый файл «%1» имеет размер более 1000 мегабайта';
		|en = 'Failure. The uploaded file «%1» is larger than 1 megabyte'"), ПомещаемыйФайл.Имя);
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		ОтказОтПомещенияФайла = Истина;
		
		//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, ОтказОтПомещенияФайла);
	Иначе
		//ПоказатьОповещениеПользователя(НСтр("ru = 'Загрузка файла'; en = 'Uploading file'"),, ПомещаемыйФайл.Имя);
	КонецЕсли;  

КонецПроцедуры







