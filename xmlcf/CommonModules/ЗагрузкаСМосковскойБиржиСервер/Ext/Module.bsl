
#Область Вспомогательные

Функция ПолучитьСерверИсточник()
	
	Возврат "iss.moex.com";
	
КонецФункции

Функция АтрибутыУзлаВСтруктуру(УзелXML)
	
	Ответ = Неопределено;
	
	Если УзелXML.КоличествоАтрибутов() > 0 Тогда
		
		Ответ = Новый Структура();
		
		Для Сч=0 По УзелXML.КоличествоАтрибутов()-1 Цикл 
			Ответ.Вставить(УзелXML.ИмяАтрибута(Сч), УзелXML.ЗначениеАтрибута(Сч));
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Функция ПолучитьКаталогВременныхФайловДляЗагрузки()
	
	Возврат КаталогВременныхФайлов() + "moex";
	
КонецФункции

#КонецОбласти

#Область СозданиеЭлементовВБД

Функция СоздатьОбновитьСправочникТорговыхСистем(СписокТорговыхСистем) Экспорт
	
	Для каждого СтрокаСписка из СписокТорговыхСистем цикл
		ТорговаяСистема = Справочники.СписокТорговыхСистем.НайтиПоРеквизиту("Заголовок", СтрокаСписка.Значение);
		Если ТорговаяСистема = Справочники.СписокТорговыхСистем.ПустаяСсылка() тогда
			НоваяТорговаяСистема = Справочники.СписокТорговыхСистем.СоздатьЭлемент();
			НоваяТорговаяСистема.Наименование 	= СтрокаСписка.Представление;
			НоваяТорговаяСистема.Заголовок 		= СтрокаСписка.Значение;
			НоваяТорговаяСистема.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция СоздатьОбновитьСправочникРынков(СтрокаСпискаТорговыхСистем,СписокРынков) Экспорт
	
	Владелец = Справочники.СписокТорговыхСистем.НайтиПоРеквизиту("Заголовок",СтрокаСпискаТорговыхСистем.Значение);
	
	Для каждого СтрокаСписка из СписокРынков цикл
		Рынок = Справочники.Рынок.НайтиПоРеквизиту("Заголовок", СтрокаСписка.Значение,,Владелец);
		Если Рынок = Справочники.Рынок.ПустаяСсылка() тогда
			НовыйРынок = Справочники.Рынок.СоздатьЭлемент();
			НовыйРынок.Владелец 	= Владелец;
			НовыйРынок.Наименование = СтрокаСписка.Представление;
			НовыйРынок.Заголовок 	= СтрокаСписка.Значение;
			НовыйРынок.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция СоздатьОбновитьСправочникРежимаТоргов(СтрокаСпискаРынков, РежимыТоргов) Экспорт
	
	Владелец = Справочники.Рынок.НайтиПоРеквизиту("Заголовок",СтрокаСпискаРынков.Значение);
	
	Для каждого СтрокаСписка из РежимыТоргов цикл
		Режим = Справочники.РежимТоргов.НайтиПоРеквизиту("Заголовок", СтрокаСписка.Значение,,Владелец);
		Если Режим = Справочники.РежимТоргов.ПустаяСсылка() тогда
			НовыйРежим = Справочники.РежимТоргов.СоздатьЭлемент();
			НовыйРежим.Владелец 	= Владелец;
			НовыйРежим.Наименование = СтрокаСписка.Представление;
			НовыйРежим.Заголовок 	= СтрокаСписка.Значение;
			НовыйРежим.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ПолучениеСпискаССайта

Функция ПолучитьСписокТорговыхСистем(ВременныйКаталог)
	
	Попытка	
		
		Список = Новый СписокЗначений;		
		СоздатьКаталог(ВременныйКаталог);
		ИмяФайла = "engines.xml";
		ИмяВходящегоФайла = "" + ВременныйКаталог + "\" + ИмяФайла;
		
		СерверИсточник = ПолучитьСерверИсточник();
		СтрокаПараметраПолучения = "/iss/engines.xml";	
		
		HTTP = Новый HTTPСоединение(СерверИсточник);		
		HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);		
		ВыбФайл = Новый Файл(ИмяВходящегоФайла);
		Если ВыбФайл.Существует() Тогда
			
			ЧтениеXML = Новый ЧтениеXML; 
			ЧтениеXML.ОткрытьФайл(ИмяВходящегоФайла);  
			
			//Открываем файл 
			Пока ЧтениеXML.Прочитать() Цикл  
				
				Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
					//Определяем начало элемента 
					Если ЧтениеXML.Имя="row" тогда						
						АтрибутыЭлемента = АтрибутыУзлаВСтруктуру(ЧтениеXML);						
						Если НЕ АтрибутыЭлемента=Неопределено Тогда
							Список.Добавить(АтрибутыЭлемента.name , АтрибутыЭлемента.title);
						КонецЕсли;						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ЧтениеXML.Закрыть();
			
		Иначе
			Возврат Неопределено;
		КонецЕсли;
				
		Возврат Список;
		
	Исключение
		Возврат Неопределено;
	КонецПопытки;	
		
КонецФункции

Функция ПолучитьСписокРынков(ВременныйКаталог,СтрокаСпискаТорговыхСистем)
	
	Попытка	
		Список = Новый СписокЗначений;
		
		ИмяФайла = "markets.xml";
		ИмяВходящегоФайла = "" + ВременныйКаталог + "\" + ИмяФайла;
		
		СерверИсточник="iss.moex.com";
		СтрокаПараметраПолучения = "/iss/engines/"+СтрокаСпискаТорговыхСистем.Значение + "/markets.xml";
		
		HTTP = Новый HTTPСоединение(СерверИсточник);
		HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
		
		ВыбФайл = Новый Файл(ИмяВходящегоФайла);
		Если ВыбФайл.Существует() Тогда
			
			ЧтениеXML = Новый ЧтениеXML; 
			ЧтениеXML.ОткрытьФайл(ИмяВходящегоФайла);  
			
			//Открываем файл 
			Пока ЧтениеXML.Прочитать() Цикл  
				
				Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
					//Определяем начало элемента 
					Если ЧтениеXML.Имя="row" тогда
						
						АтрибутыЭлемента = АтрибутыУзлаВСтруктуру(ЧтениеXML);
						
						Если НЕ АтрибутыЭлемента=Неопределено Тогда
							Список.Добавить(АтрибутыЭлемента.name, АтрибутыЭлемента.title);
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ЧтениеXML.Закрыть();
			
			Возврат Список;
			
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
	Исключение
		Возврат Неопределено;
	КонецПопытки;	
	
КонецФункции

Функция ПолучитьРежимаТоргов(ВременныйКаталог,СтрокаСпискаТорговыхСистем, СтрокаСпискаРынков)
	
	Попытка	
		Список = Новый СписокЗначений;
		
		ИмяФайла = "boards.xml";
		ИмяВходящегоФайла = "" + ВременныйКаталог + "\" + ИмяФайла;
		
		СерверИсточник="iss.moex.com";
		СтрокаПараметраПолучения = "/iss/engines/"+СтрокаСпискаТорговыхСистем.Значение + "/markets/" + СтрокаСпискаРынков.Значение + "/boards.xml";
		
		HTTP = Новый HTTPСоединение(СерверИсточник);
		HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
		
		ВыбФайл = Новый Файл(ИмяВходящегоФайла);
		Если ВыбФайл.Существует() Тогда
			
			ЧтениеXML = Новый ЧтениеXML; 
			ЧтениеXML.ОткрытьФайл(ИмяВходящегоФайла);  
			
			//Открываем файл 
			Пока ЧтениеXML.Прочитать() Цикл  
				
				Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
					//Определяем начало элемента 
					Если ЧтениеXML.Имя="row" тогда
						
						АтрибутыЭлемента = АтрибутыУзлаВСтруктуру(ЧтениеXML);
						
						Если НЕ АтрибутыЭлемента=Неопределено Тогда
							Список.Добавить(АтрибутыЭлемента.boardid, АтрибутыЭлемента.title);
						КонецЕсли;					
						
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ЧтениеXML.Закрыть();
			
			Возврат Список;
			
		Иначе
			Возврат Неопределено;
		КонецЕсли;
		
	Исключение
		Возврат Неопределено 	
	КонецПопытки;
	
КонецФункции

#КонецОбласти

Процедура ЗагрузитьОбновитьСтруктуруБлоковБиржи() Экспорт 
	
	ВременныйКаталог = ПолучитьКаталогВременныхФайловДляЗагрузки();
	
	СписокТорговыхСистем = ПолучитьСписокТорговыхСистем(ВременныйКаталог);
	Если СписокТорговыхСистем = Неопределено тогда
		Возврат;
	КонецЕсли;	
	
	СправочникТорговыхСистемОбновлен = ЗагрузкаСМосковскойБиржиСервер.СоздатьОбновитьСправочникТорговыхСистем(СписокТорговыхСистем);
	
	Если СправочникТорговыхСистемОбновлен тогда
		
		Для каждого СтрокаСпискаТорговыхСистем из СписокТорговыхСистем цикл
			
			СписокРынков = ПолучитьСписокРынков(ВременныйКаталог, СтрокаСпискаТорговыхСистем);	
			Если СписокРынков = Неопределено тогда
				Продолжить;
			КонецЕсли;	
			
			СправочникРынковОбновлен = ЗагрузкаСМосковскойБиржиСервер.СоздатьОбновитьСправочникРынков(СтрокаСпискаТорговыхСистем, СписокРынков);
			
			Если СправочникРынковОбновлен тогда
				
				Для каждого СтрокаСпискаРынков из СписокРынков цикл
					
					СписокРежимаТоргов = ПолучитьРежимаТоргов(ВременныйКаталог, СтрокаСпискаТорговыхСистем, СтрокаСпискаРынков);	
					
					Если СписокРежимаТоргов = Неопределено тогда
						Продолжить;
					КонецЕсли;
					
					ЗагрузкаСМосковскойБиржиСервер.СоздатьОбновитьСправочникРежимаТоргов(СтрокаСпискаРынков, СписокРежимаТоргов);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	УдалитьФайлы(ПолучитьКаталогВременныхФайловДляЗагрузки(),"*.*");
		
КонецПроцедуры

