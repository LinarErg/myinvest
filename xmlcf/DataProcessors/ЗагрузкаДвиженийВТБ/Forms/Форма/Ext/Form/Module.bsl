
&НаКлиенте
Процедура ПрочитатьТабличныйДокумент(Команда)
	
	ПрочитатьТабличныйДокументНаКлиенте();
	
	Если Объект.ВидЗагрузки = ПредопределенноеЗначение("Перечисление.ВидЗагрузкиВТБ.ОперацииСДС") тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаТаблицаОперацийСДС;	
	ИначеЕсли Объект.ВидЗагрузки = ПредопределенноеЗначение("Перечисление.ВидЗагрузкиВТБ.СовершенныеСделки") тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаТаблицаЗагрузкиСовершенныхСделок;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьТабличныйДокументНаКлиенте()
	
	#Если ТолстыйКлиентУправляемоеПриложение тогда
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабличныйДокумент.Область());
	ПостроительЗапроса.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;
	ПостроительЗапроса.ЗаполнитьНастройки();
	ПостроительЗапроса.Выполнить();
	
	ТаблицаВыгрузки = ПостроительЗапроса.Результат.Выгрузить();
	
	Для каждого КолонкаТаблицы из ТаблицаВыгрузки.Колонки цикл
		Если СтрНайти(КолонкаТаблицы.Имя,"_") > 0 тогда
			НовоеИмяКолонки = СтрЗаменить(КолонкаТаблицы.Имя,"_",""); 
			ТаблицаВыгрузки.Колонки[КолонкаТаблицы.Имя].Имя = НовоеИмяКолонки;			
		КонецЕсли;
	КонецЦикла;	
	
	ТаблицаСовершенныхСделок.Очистить();
	ТаблицаОперацийСДенежнымиСредствами.Очистить();
	
	Если Объект.ВидЗагрузки = Перечисления.ВидЗагрузкиВТБ.СовершенныеСделки тогда
		
		Для каждого СтрокаТаблицы из ТаблицаВыгрузки цикл
			НоваяСтрока = ТаблицаСовершенныхСделок.Добавить();			
			НоваяСтрока.ДатаЗаключения 			= ПолучитьДатуВремяИзСделок(СтрокаТаблицы.ДатаЗаключения);	
			НоваяСтрока.Счет 					= СтрокаТаблицы.Счет;
			НоваяСтрока.НомерЗаявки 			= СтрокаТаблицы.НомерЗаявки;
			НоваяСтрока.НомерСделки 			= СтрокаТаблицы.НомерСделки;
			НоваяСтрока.НаименованиеИнструмента = СтрокаТаблицы.НаименованиеИнструмента;
			НоваяСтрока.КодИнструмента 			= СтрокаТаблицы.КодИнструмента;
			НоваяСтрока.ВидОперации 			= СтрокаТаблицы.BS;
			НоваяСтрока.Валюта					= НайтиВалюту(СтрокаТаблицы.Валюта);
			НоваяСтрока.Цена 					= СтрокаТаблицы.Цена;
			НоваяСтрока.Количество 				= СтрокаТаблицы.Колво;
			НоваяСтрока.НКД 					= СтрокаТаблицы.НКД;
			НоваяСтрока.Объем 					= СтрокаТаблицы.Объем;
			НоваяСтрока.ТипСделки 				= СтрокаТаблицы.ТипСделки;
			НоваяСтрока.ДокументСделки 			= НайтиДокументСделки(СтрокаТаблицы.НомерЗаявки, НоваяСтрока.ДатаЗаключения);
			НоваяСтрока.Актив 					= НайтиАктив(СтрокаТаблицы.КодИнструмента);
		КонецЦикла;
		
	ИначеЕсли Объект.ВидЗагрузки = Перечисления.ВидЗагрузкиВТБ.ОперацииСДС тогда
		
		Для каждого СтрокаТаблицы из ТаблицаВыгрузки цикл
			НоваяСтрока = ТаблицаОперацийСДенежнымиСредствами.Добавить();			
			НоваяСтрока.НомерРаспоряжения	= СтрокаТаблицы.НомерРаспоряжения;
			НоваяСтрока.ДокументБД			= НайтиДокументПоступленияДС(Объект.Портфель,СтрокаТаблицы.НомерРаспоряжения);
			НоваяСтрока.Тип 				= СтрокаТаблицы.Тип;
			НоваяСтрока.Подано 				= ПолучитьДатуВремя(СтрокаТаблицы.Подано);
			НоваяСтрока.Исполнено 			= ПолучитьДатуВремя(СтрокаТаблицы.Исполнено);
			НоваяСтрока.Валюта 				= Справочники.Валюта.НайтиПоКоду(СтрокаТаблицы.Валюта);
			НоваяСтрока.СчетОткуда 			= СтрокаТаблицы.СчетОткуда;
			НоваяСтрока.СчетКуда 			= СтрокаТаблицы.СчетКуда;
			НоваяСтрока.Сумма				= Число(СтрокаТаблицы.Сумма);
			НоваяСтрока.СуммаКИсполнению 	= Число(СтрокаТаблицы.СуммаКИсполнению);
			НоваяСтрока.Налог 				= Число(СтрокаТаблицы.Налог);
			НоваяСтрока.Комиссия 			= Число(СтрокаТаблицы.Комиссия);			
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецЕсли 
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьДатуВремя(ДатаСтр)
	
	Возврат Дата(Лев(ДатаСтр,2) + "." + Сред(ДатаСтр,4,2) + "." + Прав(ДатаСтр,4) + " 00:00:00");
	
КонецФункции

&НаКлиенте
Функция ПолучитьДатуВремяИзСделок(ДатаСтр)
	
	Возврат Дата(Лев(ДатаСтр,2) + "." + Сред(ДатаСтр,4,2) + "." + Сред(ДатаСтр,7,4) + " " + Прав(ДатаСтр,5) + ":00");
	
КонецФункции

&НаСервере
Функция НайтиВалюту(ВалютаСтр)
	
	ВалютаДляПоиска = СтрЗаменить(ВалютаСтр,"RUR","RUB");
	
	Возврат Справочники.Валюта.НайтиПоНаименованию(ВалютаДляПоиска);
	
КонецФункции

&НаСервере
Функция НайтиДокументСделки(НомерПоручения,ДатаВремяСделки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриобретениеАктива.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПриобретениеАктива КАК ПриобретениеАктива
		|ГДЕ
		|	ПриобретениеАктива.НомерПоручения ПОДОБНО &НомерПоручения
		|	И ПриобретениеАктива.Дата = &Дата
		|	И ПриобретениеАктива.Портфель = &Портфель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПродажаАктива.Ссылка
		|ИЗ
		|	Документ.ПродажаАктива КАК ПродажаАктива
		|ГДЕ
		|	ПродажаАктива.НомерПоручения ПОДОБНО &НомерПоручения
		|	И ПродажаАктива.Дата = &Дата
		|	И ПродажаАктива.Портфель = &Портфель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриобретениеВалюты.Ссылка
		|ИЗ
		|	Документ.ПриобретениеВалюты КАК ПриобретениеВалюты
		|ГДЕ
		|	ПриобретениеВалюты.НомерПоручения ПОДОБНО &НомерПоручения
		|	И ПриобретениеВалюты.Дата = &Дата
		|	И ПриобретениеВалюты.Портфель = &Портфель
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПродажаВалюты.Ссылка
		|ИЗ
		|	Документ.ПродажаВалюты КАК ПродажаВалюты
		|ГДЕ
		|	ПродажаВалюты.НомерПоручения ПОДОБНО &НомерПоручения
		|	И ПродажаВалюты.Дата = &Дата
		|	И ПродажаВалюты.Портфель = &Портфель";
	
	Запрос.УстановитьПараметр("Дата", 			ДатаВремяСделки);
	Запрос.УстановитьПараметр("НомерПоручения", НомерПоручения);
	Запрос.УстановитьПараметр("Портфель", 		Объект.Портфель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
			
КонецФункции

&НаСервере
Функция НайтиДокументПоступленияДС(Портфель,НомерРаспоряжения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПополнениеВыводСБрокерскогоСчета.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПополнениеВыводСБрокерскогоСчета КАК ПополнениеВыводСБрокерскогоСчета
		|ГДЕ
		|	ПополнениеВыводСБрокерскогоСчета.НомерРаспоряжения = &НомерРаспоряжения
		|	И ПополнениеВыводСБрокерскогоСчета.Портфель = &Портфель
		|	И НЕ ПополнениеВыводСБрокерскогоСчета.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("НомерРаспоряжения", НомерРаспоряжения);
	Запрос.УстановитьПараметр("Портфель", Портфель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	Возврат Документы.ПополнениеВыводСБрокерскогоСчета.ПустаяСсылка();
	
КонецФункции	
	
&НаСервере
Функция НайтиАктив(ТикерСтр)
	
	СоответствиеТикеровВалюты = ОбщегоНазначенияСервер.ПолучитьСоответствиеТикеровВалюты();
	Валюта = СоответствиеТикеровВалюты.Получить(ТикерСтр);
	Если Валюта <> Неопределено Тогда
		Возврат Валюта;		
	КонецЕсли;
	
	Актив = Справочники.Активы.НайтиПоРеквизиту("Тикер",ТикерСтр);
	Если Актив <> Справочники.Активы.ПустаяСсылка() тогда
		Возврат Актив;
	КонецЕсли;
	
	ТикерДляПоиска = СтрЗаменить(ТикерСтр,"_SPB","");	
	ТикерДляПоиска = СтрЗаменить(ТикерДляПоиска," ",".");
	Актив = Справочники.Активы.НайтиПоРеквизиту("Тикер",ТикерДляПоиска);
	Если Актив <> Справочники.Активы.ПустаяСсылка() тогда
		Возврат Актив;
	КонецЕсли;
	
	Актив = Справочники.Активы.НайтиПоРеквизиту("Тикер",Лев(ТикерДляПоиска,3));
	Если Актив <> Справочники.Активы.ПустаяСсылка() тогда
		Возврат Актив;
	КонецЕсли;
	
	Возврат Справочники.Активы.ПустаяСсылка();
	
КонецФункции

&НаСервере
Процедура СоздатьАктивыНаСервере()

	Для каждого СтрокаТаблицы из ТаблицаСовершенныхСделок цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Актив) тогда	
			Актив = НайтиАктив(СтрокаТаблицы.КодИнструмента);
			Если Актив = Справочники.Активы.ПустаяСсылка() тогда
				НовыйАктив = Справочники.Активы.СоздатьЭлемент();
				НовыйАктив.Тикер = СтрокаТаблицы.КодИнструмента;
				НовыйАктив.Наименование = СтрокаТаблицы.НаименованиеИнструмента;
				НовыйАктив.Записать();
				СтрокаТаблицы.Актив = НовыйАктив.Ссылка;
			Иначе
				СтрокаТаблицы.Актив = Актив;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАктивы(Команда)
	СоздатьАктивыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	СоздатьДокументыНаСервере();
	ПрочитатьТабличныйДокументНаКлиенте();
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыНаСервере()
	
	ТаблицаСвернутая = ТаблицаСовершенныхСделок.Выгрузить();
	ТаблицаСвернутая.Свернуть("Обрабатывать,ДатаЗаключения,Счет,НомерЗаявки,Валюта,НаименованиеИнструмента,КодИнструмента,Цена,ТипСделки,Актив,ДокументСделки,ВидОперации", "Объем,Количество,НКД");
	
	Для каждого СтрокаТаблицы из ТаблицаСвернутая цикл
		Если СтрокаТаблицы.Обрабатывать = Истина тогда
			Если СтрокаТаблицы.НомерЗаявки = "0" тогда
				Продолжить;
			КонецЕсли;			
						
			Если СтрокаТаблицы.ВидОперации = "Покупка" тогда
				Если СтрокаТаблицы.ТипСделки = "Валютный рынок" тогда
					Если ЗначениеЗаполнено(СтрокаТаблицы.ДокументСделки) тогда
						НовыйДокумент = СтрокаТаблицы.ДокументСделки.ПолучитьОбъект();
					Иначе
						НовыйДокумент = Документы.ПриобретениеВалюты.СоздатьДокумент();
					КонецЕсли;
					НовыйДокумент.Портфель 			= Объект.Портфель;
					НовыйДокумент.Дата 				= СтрокаТаблицы.ДатаЗаключения;
					НовыйДокумент.НомерПоручения 	= СтрокаТаблицы.НомерЗаявки;
					НовыйДокумент.ВалютаСписания 	= СтрокаТаблицы.Валюта;
					НовыйДокумент.СуммаСписания 	= СтрокаТаблицы.Объем;
					НовыйДокумент.Цена				= СтрокаТаблицы.Цена;
					НовыйДокумент.ВалютаПриобретения = СтрокаТаблицы.Актив;
					НовыйДокумент.СуммаПриобретения = СтрокаТаблицы.Количество;
					НовыйДокумент.СуммаКомиссии 	= ОбщегоНазначенияСервер.РассчитатьСуммуКомиссииБрокера(СтрокаТаблицы.Объем,Объект.Портфель.Брокер,СтрокаТаблицы.ДатаЗаключения,СтрокаТаблицы.Актив);
					НовыйДокумент.ВалютаКомиссии 	= СтрокаТаблицы.Валюта;
					Попытка
						НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
					КонецПопытки;
				Иначе 
					Если ЗначениеЗаполнено(СтрокаТаблицы.ДокументСделки) тогда
						НовыйДокумент = СтрокаТаблицы.ДокументСделки.ПолучитьОбъект();
					Иначе
						НовыйДокумент = Документы.ПриобретениеАктива.СоздатьДокумент();
					КонецЕсли;
					НовыйДокумент.Актив		 	= СтрокаТаблицы.Актив;
					НовыйДокумент.Дата 			= СтрокаТаблицы.ДатаЗаключения;
					НовыйДокумент.Количество 	= СтрокаТаблицы.Количество;
					НовыйДокумент.НКД 			= СтрокаТаблицы.НКД;
					НовыйДокумент.НомерПоручения = СтрокаТаблицы.НомерЗаявки;
					НовыйДокумент.Портфель 		= Объект.Портфель;
					НовыйДокумент.Сумма 		= СтрокаТаблицы.Объем;
					НовыйДокумент.СуммаКомиссии = ОбщегоНазначенияСервер.РассчитатьСуммуКомиссииБрокера(СтрокаТаблицы.Объем,Объект.Портфель.Брокер,СтрокаТаблицы.ДатаЗаключения,СтрокаТаблицы.Актив);
					Попытка
						НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
					КонецПопытки;
				КонецЕсли;
			ИначеЕсли СтрокаТаблицы.ВидОперации = "Продажа" тогда
				Если СтрокаТаблицы.ТипСделки = "Валютный рынок" тогда
					Если ЗначениеЗаполнено(СтрокаТаблицы.ДокументСделки) тогда
						НовыйДокумент = СтрокаТаблицы.ДокументСделки.ПолучитьОбъект();
					Иначе
						НовыйДокумент = Документы.ПродажаВалюты.СоздатьДокумент();
					КонецЕсли;					
					НовыйДокумент.Портфель 			= Объект.Портфель;
					НовыйДокумент.Дата 				= СтрокаТаблицы.ДатаЗаключения;
					НовыйДокумент.НомерПоручения 	= СтрокаТаблицы.НомерЗаявки;
					НовыйДокумент.ВалютаСписания 	= СтрокаТаблицы.Валюта;
					НовыйДокумент.СуммаСписания 	= СтрокаТаблицы.Объем;
					НовыйДокумент.Цена				= СтрокаТаблицы.Цена;
					НовыйДокумент.ВалютаПриобретения = СтрокаТаблицы.Актив;
					НовыйДокумент.СуммаПриобретения = СтрокаТаблицы.Количество;
					НовыйДокумент.СуммаКомиссии 	= ОбщегоНазначенияСервер.РассчитатьСуммуКомиссииБрокера(СтрокаТаблицы.Объем,Объект.Портфель.Брокер,СтрокаТаблицы.ДатаЗаключения,СтрокаТаблицы.Актив);
					НовыйДокумент.ВалютаКомиссии 	= СтрокаТаблицы.Валюта;
					Попытка
						НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
					КонецПопытки;
				Иначе 
					Если ЗначениеЗаполнено(СтрокаТаблицы.ДокументСделки) тогда
						НовыйДокумент = СтрокаТаблицы.ДокументСделки.ПолучитьОбъект();
					Иначе
						НовыйДокумент = Документы.ПродажаАктива.СоздатьДокумент();
					КонецЕсли;					
					НовыйДокумент.Актив		 	= СтрокаТаблицы.Актив;
					НовыйДокумент.Дата 			= СтрокаТаблицы.ДатаЗаключения;
					НовыйДокумент.Количество 	= СтрокаТаблицы.Количество;
					НовыйДокумент.НКД 			= СтрокаТаблицы.НКД;
					НовыйДокумент.НомерПоручения = СтрокаТаблицы.НомерЗаявки;
					НовыйДокумент.Портфель 		= Объект.Портфель;
					НовыйДокумент.Сумма 		= СтрокаТаблицы.Объем;
					НовыйДокумент.СуммаКомиссии = ОбщегоНазначенияСервер.РассчитатьСуммуКомиссииБрокера(СтрокаТаблицы.Объем,Объект.Портфель.Брокер,СтрокаТаблицы.ДатаЗаключения,СтрокаТаблицы.Актив);
					Попытка
						НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыДСНаСервере()

	Для каждого СтрокаТаблицы из ТаблицаОперацийСДенежнымиСредствами цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.ДокументБД) тогда
			Продолжить;
		КонецЕсли;
		
		НовыйДокумент = Документы.ПополнениеВыводСБрокерскогоСчета.СоздатьДокумент();
		НовыйДокумент.Дата 				= СтрокаТаблицы.Исполнено;
		НовыйДокумент.ВидОперации 		= ?(СтрокаТаблицы.Тип = "Зачисление",Перечисления.ВидОперацииПополнениеВыводСБрокерскогоСчета.Пополнение,Перечисления.ВидОперацииПополнениеВыводСБрокерскогоСчета.Вывод);
		НовыйДокумент.Портфель			= Объект.Портфель;
		НовыйДокумент.Валюта			= СтрокаТаблицы.Валюта;		
		НовыйДокумент.НомерРаспоряжения = СтрокаТаблицы.НомерРаспоряжения;		
		НовыйДокумент.Сумма				= СтрокаТаблицы.СуммаКИсполнению;
		НовыйДокумент.СуммаУдержанногоНалога = СтрокаТаблицы.Налог;
		НовыйДокумент.Комментарий 		= "#Создано автоматически";
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);		
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументыДС(Команда)
	
	СоздатьДокументыДСНаСервере();
	ПрочитатьТабличныйДокументНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	Для каждого СтрокаТаблицы из ТаблицаСовершенныхСделок цикл
		СтрокаТаблицы.Обрабатывать = Истина;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ОбрабатыватьСнятьВсеОтметки(Команда)
	
	Для каждого СтрокаТаблицы из ТаблицаСовершенныхСделок цикл
		СтрокаТаблицы.Обрабатывать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбрабатыватьИнвертировать(Команда)
	
	Для каждого СтрокаТаблицы из ТаблицаСовершенныхСделок цикл
		СтрокаТаблицы.Обрабатывать = НЕ СтрокаТаблицы.Обрабатывать;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбрабатыватьОтметитьОдинСледующий(Команда)
	
	НашелОтметку = Ложь;
	Для каждого СтрокаТаблицы из ТаблицаСовершенныхСделок цикл
		Если СтрокаТаблицы.Обрабатывать тогда
			СтрокаТаблицы.Обрабатывать = Ложь;
			НашелОтметку = Истина;
		Иначе
			Если НашелОтметку тогда
				СтрокаТаблицы.Обрабатывать = Истина;	
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры




